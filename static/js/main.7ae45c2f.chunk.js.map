{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DraggableBox","_ref","id","children","type","onMove","onDelete","onConnect","onRename","isDragging","drag","useDrag","item","collect","monitor","isEditing","setIsEditing","useState","newName","setNewName","handleRename","trim","React","createElement","ref","style","opacity","cursor","border","padding","margin","backgroundColor","display","width","textAlign","position","value","onChange","e","target","onBlur","onKeyPress","key","autoFocus","onDoubleClick","onClick","marginRight","color","borderRadius","DropZone","_ref2","onDrop","dropRef","useRef","isOver","drop","useDrop","accept","offset","getClientOffset","current","getBoundingClientRect","minHeight","Line","_ref3","start","end","top","left","height","pointerEvents","x1","x","y1","y","x2","y2","stroke","strokeWidth","OrganizationalStructureBuilder","structure","setStructure","connections","setConnections","connectingMode","setConnectingMode","error","setError","products","setProducts","label","components","map","product","useEffect","handleError","event","console","window","addEventListener","removeEventListener","prev","DndProvider","backend","HTML5Backend","overflowY","maxHeight","fontWeight","marginBottom","component","addNewProduct","newProduct","String","fromCharCode","length","marginTop","handleDrop","dropZoneRect","Error","Math","round","newId","Date","now","err","conn","index","find","direction","handleMove","filter","handleDelete","handleConnect","split","resetStructure","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.7ae45c2f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst DraggableBox = ({ id, children, type, onMove, onDelete, onConnect, onRename }) => {\n  const [{ isDragging }, drag] = useDrag(() => ({\n    type: 'box',\n    item: { id, type },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }));\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(children);\n\n  const handleRename = () => {\n    if (newName.trim() !== '') {\n      onRename(id, newName);\n      setIsEditing(false);\n    }\n  };\n\n  return (\n    <div\n      ref={drag}\n      style={{\n        opacity: isDragging ? 0.5 : 1,\n        cursor: 'move',\n        border: '1px solid #ccc',\n        padding: '0.5rem',\n        margin: '0.5rem',\n        backgroundColor: type === 'department' ? '#e6f7ff' : type === 'division' ? '#d4edda' : '#fff1b8',\n        display: 'inline-block',\n        width: '150px',\n        textAlign: 'center',\n        position: 'relative',\n      }}\n    >\n      {isEditing ? (\n        <input\n          value={newName}\n          onChange={(e) => setNewName(e.target.value)}\n          onBlur={handleRename}\n          onKeyPress={(e) => e.key === 'Enter' && handleRename()}\n          autoFocus\n        />\n      ) : (\n        <div onDoubleClick={() => setIsEditing(true)}>{children}</div>\n      )}\n      <div>\n        <button onClick={() => onMove('left')} style={{marginRight: '5px'}}>←</button>\n        <button onClick={() => onMove('right')} style={{marginRight: '5px'}}>→</button>\n        <button onClick={onDelete} style={{backgroundColor: '#ff4d4f', color: 'white', border: 'none', borderRadius: '4px', marginRight: '5px'}}>X</button>\n        <button onClick={onConnect} style={{backgroundColor: '#1890ff', color: 'white', border: 'none', borderRadius: '4px'}}>Connect</button>\n      </div>\n    </div>\n  );\n};\n\nconst DropZone = ({ onDrop, children }) => {\n  const dropRef = useRef(null);\n\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: 'box',\n    drop: (item, monitor) => {\n      const offset = monitor.getClientOffset();\n      if (offset && dropRef.current) {\n        onDrop(item, offset, dropRef.current.getBoundingClientRect());\n      }\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  drop(dropRef);\n\n  return (\n    <div\n      ref={dropRef}\n      style={{\n        minHeight: '600px',\n        border: '2px dashed #ccc',\n        padding: '1rem',\n        backgroundColor: isOver ? '#f0f0f0' : 'white',\n        position: 'relative',\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst Line = ({ start, end }) => (\n  <svg style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', pointerEvents: 'none' }}>\n    <line\n      x1={start.x}\n      y1={start.y}\n      x2={end.x}\n      y2={end.y}\n      stroke=\"black\"\n      strokeWidth=\"2\"\n    />\n  </svg>\n);\n\nconst OrganizationalStructureBuilder = () => {\n  const [structure, setStructure] = useState([]);\n  const [connections, setConnections] = useState([]);\n  const [connectingMode, setConnectingMode] = useState(null);\n  const [error, setError] = useState(null);\n  const [products, setProducts] = useState([\n    { id: 'product-a', label: 'Product A Division' },\n    { id: 'product-b', label: 'Product B Division' },\n  ]);\n\n  const components = [\n    { id: 'board', type: 'position', label: 'Board' },\n    { id: 'ceo', type: 'position', label: 'CEO' },\n    { id: 'manager', type: 'position', label: 'Manager' },\n    { id: 'employee', type: 'position', label: 'Employee' },\n    { id: 'hr', type: 'department', label: 'HR Department' },\n    { id: 'finance', type: 'department', label: 'Finance Department' },\n    { id: 'marketing', type: 'department', label: 'Marketing Department' },\n    { id: 'sales', type: 'department', label: 'Sales Department' },\n    { id: 'logistics', type: 'department', label: 'Logistics Department' },\n    { id: 'accounting', type: 'department', label: 'Accounting Department' },\n    { id: 'it', type: 'department', label: 'IT Department' },\n    ...products.map(product => ({ ...product, type: 'division' })),\n  ];\n\n  useEffect(() => {\n    const handleError = (event) => {\n      console.error('Unhandled error:', event.error);\n      setError('An unexpected error occurred. Please check the console for details.');\n    };\n\n    window.addEventListener('error', handleError);\n    return () => window.removeEventListener('error', handleError);\n  }, []);\n\n  const handleDrop = (item, offset, dropZoneRect) => {\n    try {\n      if (!dropZoneRect) {\n        throw new Error('Drop zone coordinates not available');\n      }\n      const x = Math.round((offset.x - dropZoneRect.left) / 160) * 160;\n      const y = Math.round((offset.y - dropZoneRect.top) / 80) * 80;\n      \n      const newId = `${item.id}-${Date.now()}`;\n      setStructure(prev => [...prev, { ...item, id: newId, x, y }]);\n      setError(null);\n    } catch (err) {\n      console.error('Error in handleDrop:', err);\n      setError('Failed to add item. Please try again.');\n    }\n  };\n\n  const handleMove = (id, direction) => {\n    try {\n      setStructure(prev => prev.map(item => \n        item.id === id ? { ...item, x: item.x + (direction === 'left' ? -160 : 160) } : item\n      ));\n      setError(null);\n    } catch (err) {\n      console.error('Error in handleMove:', err);\n      setError('Failed to move item. Please try again.');\n    }\n  };\n\n  const handleDelete = (id) => {\n    setStructure(prev => prev.filter(item => item.id !== id));\n    setConnections(prev => prev.filter(conn => conn.start !== id && conn.end !== id));\n  };\n\n  const handleConnect = (id) => {\n    if (connectingMode) {\n      setConnections(prev => [...prev, { start: connectingMode, end: id }]);\n      setConnectingMode(null);\n    } else {\n      setConnectingMode(id);\n    }\n  };\n\n  const handleRename = (id, newName) => {\n    setStructure(prev => prev.map(item => \n      item.id === id ? { ...item, label: newName } : item\n    ));\n    setProducts(prev => prev.map(product => \n      product.id === id ? { ...product, label: newName } : product\n    ));\n  };\n\n  const addNewProduct = () => {\n    const newId = `product-${String.fromCharCode(97 + products.length)}`;\n    const newProduct = { id: newId, label: `Product ${String.fromCharCode(65 + products.length)} Division` };\n    setProducts(prev => [...prev, newProduct]);\n  };\n\n  const resetStructure = () => {\n    setStructure([]);\n    setConnections([]);\n    setConnectingMode(null);\n    setError(null);\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '30%', padding: '1rem', overflowY: 'auto', maxHeight: '80vh' }}>\n          <h3 style={{ fontWeight: 'bold', marginBottom: '1rem' }}>Available Components</h3>\n          {components.map((component) => (\n            <DraggableBox \n              key={component.id} \n              id={component.id} \n              type={component.type} \n              onMove={() => {}} \n              onDelete={() => {}} \n              onConnect={() => {}}\n              onRename={handleRename}\n            >\n              {component.label}\n            </DraggableBox>\n          ))}\n          <button \n            onClick={addNewProduct}\n            style={{\n              marginTop: '1rem',\n              padding: '0.5rem 1rem',\n              backgroundColor: '#52c41a',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            Add New Product/Division\n          </button>\n        </div>\n        <div style={{ width: '70%', padding: '1rem' }}>\n          <h3 style={{ fontWeight: 'bold', marginBottom: '1rem' }}>Organizational Structure</h3>\n          {error && <div style={{ color: 'red', marginBottom: '1rem' }}>{error}</div>}\n          <DropZone onDrop={handleDrop}>\n            {connections.map((conn, index) => {\n              const start = structure.find(item => item.id === conn.start);\n              const end = structure.find(item => item.id === conn.end);\n              if (start && end) {\n                return <Line key={index} start={{ x: start.x + 75, y: start.y + 30 }} end={{ x: end.x + 75, y: end.y + 30 }} />;\n              }\n              return null;\n            })}\n            {structure.map((item) => (\n              <div key={item.id} style={{ position: 'absolute', left: item.x, top: item.y }}>\n                <DraggableBox \n                  id={item.id} \n                  type={item.type} \n                  onMove={(direction) => handleMove(item.id, direction)}\n                  onDelete={() => handleDelete(item.id)}\n                  onConnect={() => handleConnect(item.id)}\n                  onRename={handleRename}\n                >\n                  {item.label || item.id.split('-')[0]}\n                </DraggableBox>\n              </div>\n            ))}\n          </DropZone>\n          <button \n            onClick={resetStructure}\n            style={{\n              marginTop: '1rem',\n              padding: '0.5rem 1rem',\n              backgroundColor: '#f44336',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            Reset Structure\n          </button>\n        </div>\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default OrganizationalStructureBuilder;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}